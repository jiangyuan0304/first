# 字段选项
blank 针对表单验证的时候，可以填为空

db_column 数据库中的列名为该属性所给的值
 gname=models.CharField(db_column=name)

unique 唯一值，不用说了

null 如果为True 就是可以将空值以NULL的形式存储在数据库中



对于数据库中的数据类型还是需要详细了解一下，因为django 中很多给你屏蔽了。
(你只用使用Field 就可以默认使用什么类型和长度限制的字段）

from myapp.models import Student
aa = Grades.gra.all()
# 因为类中定义了管理器 gra=models.Manager()

aa = Student.objects.get(pk=1)
output : 2math
# 类中定义了__str__ 返回了函数体内的内容了

models 类中可以定义__str__方法和元数据class Meta:
# 其中Meta有两个属性 db_table(表名) 和ordering （排序）
# 类中可以放类吗，什么操作

mysql 的客户端使用HeidiSQL 很好用
# 看看怎么可以批量添加数据


# class GradesManage(models.Manager):
#     def get_queryset(self):
#         return super(GradesManage,self).get_queryset().filter(isDelete=False)
#     def add_student(self,name,date,sex,age,grade,isD=False):
#         stu=self.model()
#         stu.ggname=name
#         stu.ggsex=sex
#         stu.ggdate=date
#         stu.ggage=age
#         stu.gggrades=grade
#         stu.isDelete=False
#         return stu


    @classmethod
    def createGrades(cls,name,date,num,file,img,isD=False):
        graa=cls(gname=name,gdate=date,gnum=num,gfile=file,gimg=img,isDelete=isD)
        return graa



User.objects.get(username="jiangyuan").password

User.objects.all()[0]
# 支持下标切片 且下表不能是负数


字段选项
contains
exact
isnull, isnotnull
endwith, startwith

User.objects.filter(username__contains="jia")
# 注意是双下划线

User.objects.filter(username__in=["jiangyuan"])

User.objects.filter(datetime__year=2021)

#聚合函数
from django.db.models import Max, Min, Sum
Student.stuobj.aggregate(Max("ggage"))
# 注意 "ggage" 双引号
output:  {"ggage_Max":24}

# join 跨关联查询
Grades.gra.filter(student__ggname__contains="jiangyuan")
# 查找 name包含jiangyuan的班级是多少
# 注意student 模型是要小写的, 不然会报django.core.exceptions.FieldError 错误
# 跨关联查询还是要看看的，详细一点


#字段的比较
Student.stuobj.filter(isDelete__lt=F("gggrades_id"))
output: 字典 对象的集合 <QuerySet [<Student: jiangjiang-2021-05-28 00:14:28>, <Student: zhangzhang-2021-05-28 00:18:44>]>

# F对象支持运算
Student.stuobj.filter(isDelete__lt=F("gggrades_id")+20)

# Q对象
Student.stuobj.filter(Q(pk__lt=3)|Q(gggrades__gt=5))

这些个查询自己总结一下